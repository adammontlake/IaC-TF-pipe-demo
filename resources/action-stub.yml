name: 'Terraform'

# When to run this action file
on: [push, pull_request]

env:
  TF_LOG: INFO

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    # Set the working directory to main for the config files
    defaults:
      run:
        shell: bash
        working-directory: ./

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    # Install Terraform CLI 
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      id: init
      env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}
        STORAGE_ACCOUNT: ${{ secrets.STORAGE_ACCOUNT }}
        CONTAINER_NAME: ${{ secrets.CONTAINER_NAME }}
      run: terraform init -backend-config="storage_account_name=$STORAGE_ACCOUNT" -backend-config="container_name=$CONTAINER_NAME" -backend-config="resource_group_name=$RESOURCE_GROUP"

    ###############################
    ### Start editing from here ###
    ###############################
    
    # Run a terraform fmt
    - name: Terraform Format
      id: fmt

    # Run a terraform validate for push and PR on non-main branch
    - name: Terraform Validate
      id: validate
    
    # Run Terraform plan - this action requires the SP and Azure details
    - name: Terraform Plan
      id: plan

    # Run Checkov against configuration
    # Use example here: https://github.com/bridgecrewio/checkov-action
    - name: Checkov
      id: checkov

    
    # OPTIONAL - if you have time - or you can just skip to the terraform apply
    # Add a comment to pull requests with plan results
    # Run this only on pull requests
    # need to add "github-token: ${{ secrets.GH_TOKEN }}" so that the action has access to post comments
    # use exaqmple here: https://github.com/actions/github-script
    - name: add-plan-comment
      id: comment_before_deployment
 

      # On push to main, build or change infrastructure according to Terraform configuration files
      # Only run when making a pull request
      # Needs secrets: ARM_CLIENT_ID, ARM_CLIENT_SECRET, ARM_TENANT_ID, ARM_SUBSCRIPTION_ID
    - name: Terraform Apply
      id: apply
