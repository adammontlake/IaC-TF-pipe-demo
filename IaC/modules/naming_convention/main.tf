locals {
  # A default function to return a generic name
  default_name = "${var.type}-${var.environment}"

  # A function to generate the name for a webapp
  resource_group_name                        = "rg-${var.service_name}-${var.environment}"
  managed_identity_name                      = "mid-${var.service_name}-${var.environment}"
  virtual_network_name                       = "vnet-${var.workload}-${var.environment}"
  vpn_gateway_name                           = "vgw-${var.subscription_purpose}-${var.vnet_purpose}-${var.vpn_type}-${var.plane}"
  vpn_gateway_s2s_connection_name            = "cn-${var.local_network_ref}-to-${var.remote_network_ref}-${var.plane}"
  vpn_gateway_er_connection_name             = "ercn-${var.local_network_ref}-to-${var.remote_network_ref}-${var.plane}"
  subnet_network_name                        = var.workload == "GatewaySubnet" ? "GatewaySubnet" : var.workload == "AzureFirewallSubnet" ? "AzureFirewallSubnet" : "snet-${var.workload}-${var.environment}"
  network_interface_name                     = "nic-${var.resource_number}-${var.service_name}-${var.environment}"
  public_ip_network_name                     = "pip-${var.workload}-${var.subscription_purpose}"
  network_security_group_name                = "nsg-${var.nsg_scope}-${var.nsg_resource}"
  network_security_group_rule_name           = "${var.direction}-${var.action}-${var.traffic_protocol}-${var.destination_port}-${var.source_resource}-${var.destination_resource}"
  application_security_group_name            = "asg-${var.workload}"
  route_table_name                           = "rt-${var.workload}-${var.subnet_name}"
  key_vault_name                             = "kv${var.kv_env}-${var.workload}-${substr(md5("kv${var.kv_env}-${var.workload}"), 0, 6)}"
  key_vault_key_name                         = "key-${var.workload}-${var.usage}"
  key_vault_secret_name                      = "secret-${var.workload}-${var.usage}"
  private_endpoint_name                      = "pe-${var.workload}"
  storage_account_name                       = "st${var.storage_description}${substr(md5("st${var.storage_description}"), 0, 6)}"
  vnet_peering_name                          = "vnpr-${var.source_network}-${var.target_network}"
  vm_name                                    = "vm-${var.workload}${var.number}"
  vmss_name                                  = "vmss-${var.workload}${var.number}"
  firewall_name                              = "afw-${var.workload}-${var.environment}"
  firewall_Policy_name                       = "afwp-${var.workload}"
  firewall_policy_rule_collection_group_name = "afw-rcg-${var.traffic_type}-${var.policy_description}"
  firewall_policy_rule_collection_name       = "afw-rc-${var.traffic_type}-${var.group_description}"
  firewall_policy_rule_DNAT_name             = "fr-DNAT-${var.source_address_title}-${var.source_port}-to-${var.desatination_address_title}-${var.destination_port}"
  firewall_policy_rule_app_name              = "fr-app-${var.source_address_title}-${var.source_port}-${var.traffic_protocol}-to-${var.desatination_address_title}-${var.destination_port}"
  firewall_policy_rule_network_name          = "fr-net-${var.source_address_title}-${var.source_port}-${var.traffic_protocol}-to-${var.desatination_address_title}-${var.destination_port}"
  managed_disk_name                          = "md-${var.disk_resource_description}-${var.disk_description}"
  disk_encryption_set_name                   = "des-${var.workload}-${var.des_usage}"
  ssh_key_name                               = "sshkp-${var.workload}-${var.ssh_key_usage}"
  dns_private_resolver_name                  = "dpr-${var.workload}-${var.environment}"
  dns_private_resolver_endpoint_name         = "dpr-endpoint-${var.direction}-${var.workload}-${var.number}"
  dns_private_resolver_rule_set_name         = "dpr-rs-${var.rule_set_description}-${var.number}"
  dns_private_resolver_rule_set_rule_name    = "dpr-rsr-${var.destination_description}"
  name                                       = lookup(local.name_functions, var.type, local.default_name)
}
